---
import { Icon } from 'astro-icon/components'

/**
 * Feature Component
 *
 * @description A component that displays a feature with an icon, title, and description
 */
interface Props {
  /**
   * The icon to display
   */
  icon: string
  /**
   * The title to display
   */
  title: string
  /**
   * Additional CSS classes
   */
  class?: string
  /**
   * Color for the feature
   */
  color?: string
}

const { icon = 'mdi:rocket', title = 'Title', class: className, color }: Props = Astro.props
---

<div class={`feature flex flex-col gap-4 ${className || ''}`}>
  <Icon name={icon} />
  <div class="content">
    <h3 class="text-2xl font-bold">{title}</h3>
    <p>
      <slot>Lorem ipsum dolor sit amet consectetur adipisicing elit. Hic, corporis.</slot>
    </p>
  </div>
</div>

<style lang="scss">
  @use '../assets/scss/base/breakpoint' as *;

  .feature {
    position: relative;
    padding: var(--space-l);
    inline-size: calc(100% - var(--space-l));
    background: #fff;
    border: 1.5px solid var(--color-neutral-200);
    border-radius: 1.25rem;
    box-shadow: 0 4px 24px 0 rgba(132, 165, 157, 0.09); /* softer sage shadow */
    transition: box-shadow 0.22s, transform 0.22s, border-color 0.22s;


    > * {
      position: relative;
      z-index: 2;
    }

    @include breakpoint(xl) {
      inline-size: 100%;
    }

    &:hover {
      box-shadow: 0 12px 36px 0 rgba(132, 165, 157, 0.17);
      border-color: var(--brand-neutral);
      transform: translateY(-6px) scale(1.017);
    }

    /* Remove default theme before/after pseudo-elements */
    &::before,
    &::after {
      display: none !important;
    }
  }

  :global(.feature [data-icon]) {
    inline-size: 4rem;
    block-size: auto;
    color: var(--brand-sage);
    background: var(--brand-peach);
    border-radius: 50%;
    padding: 0.75rem;
    margin-bottom: 1.25rem;
  }

  :global(.feature [data-icon]) {
    inline-size: 4rem;
    block-size: auto;
    color: var(--link-color);
  }

  :global(.darkmode .feature::before) {
    box-shadow: 0 0 0 6px var(--color-neutral-900);
    background-color: var(--color-neutral-900);
  }
</style>
